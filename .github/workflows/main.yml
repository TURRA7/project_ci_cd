name: CI/CD test_project
on:
  push:
    branches:
      - main
jobs:
  project_linting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12.3

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        
      - name: Run linting
        run: flake8 .
    
  project_testing:
    needs: project_linting
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.TEST_POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12.3

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Run tests
        env:
          TEST_DB_USER: ${{ secrets.POSTGRES_USER }}
          TEST_DB_PASS: ${{ secrets.POSTGRES_PASSWORD }}
          TEST_DB_HOST: 127.0.0.1
          TEST_DB_NAME: ${{ secrets.TEST_POSTGRES_DB }}
        run: pytest tests/ --maxfail=1 --disable-warnings

  build:
    needs: project_testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          
      - name: Set environment variables
        run: |
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> $GITHUB_ENV
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> $GITHUB_ENV
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> $GITHUB_ENV
      
      - name: Set up Docker Composse and build + run
        run: |
          docker-compose up --build -d
      
      - name: Check containers logs
        run: |
          docker-compose logs
      
      - name: Removing Docker traces
        run: |
          docker container prune -f
          docker image prune -af
      

